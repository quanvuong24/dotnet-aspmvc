trigger:
- cicd
stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'vs2017-win2016'
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    steps:
    - task: NuGetToolInstaller@0
      displayName: 'Use NuGet 4.4.1'
      inputs:
        versionSpec: 4.4.1
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: '$(solution)'
    - task: VSBuild@1
      displayName: Build
      inputs:
        solution: '$(solution)'
        vsVersion: 15.0
        msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
        platform: '$(BuildPlatform)'
        configuration: '$(BuildConfiguration)'
        clean: true
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'aspnetmvc-v$(Release.version)-$(Build.BuildId)'
    - task: BeanstalkCreateApplicationVersion@1
      inputs:
        awsCredentials: 'aws_quanvuong'
        regionName: 'ap-southeast-1'
        applicationName: 'aspnetapp'
        applicationType: 'aspnet'
        webDeploymentArchive: '$(build.artifactstagingdirectory)\MVC5App.zip'
        versionLabel: 'aspnetmvc-v$(Release.version)-$(Build.BuildId)'
        description: 'Created aspnetmvc-v$(Release.version)-$(Build.BuildId)'
        logRequest: true
        logResponse: true
    
- stage: Deploy
  jobs:
    # track deployments on the environment
  - deployment: DeployWeb
    pool:
      vmImage: 'Ubuntu-16.04'
    # creates an environment if it doesnâ€™t exist
    environment: 'smarthotel-dev'
    strategy:
      # default deployment strategy
      runOnce:
        deploy:
          steps:
          - script: echo my first deployment